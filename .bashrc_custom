
# Check for an interactive session
[ -z "$PS1" ] && return

if [ -f ~/.bash/.bash_aliases ]; then
    . ~/.bash/.bash_aliases
fi

if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi


 # make bash autocomplete with up arrow 
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'
 
# make tab cycle through commands instead of listing 
bind '"\t":menu-complete'

# make tab completion case incensitive
set completion-ignore-case on

## some recommended aliases (http://wiki.archlinux.org/index.php/Core_Utilities#alias)
## modified commands
#alias diff='colordiff'              # requires colordiff package
#alias grep='grep -n --color=auto'   # added -n for line numbers
#alias more='less'
#alias df='df -h'
#alias du='du -c -h'
#alias mkdir='mkdir -p -v'
#alias nano='nano -w'
##alias ping='ping -c 5'
#alias ..='cd ..'
#
## new commands
#alias da='date "+%A, %B %d, %Y [%T]"'
#alias du1='du --max-depth=1'
#alias hist='history | grep $1'      # requires an argument
#alias openports='netstat --all --numeric --programs --inet'
#alias pg='ps -Af | grep $1'         # requires an argument
#
## privileged access
#if [ $UID -ne 0 ]; then
#  alias sudo='sudo '
#  alias scat='sudo cat'
#  alias svim='sudo vim'
#  alias root='sudo su'
#  alias reboot='sudo reboot'
#  alias netcfg='sudo netcfg2'
#fi
#
## ls
#alias ls='ls -hF --color=always'
#alias lr='ls -R'                    # recursive ls
#alias ll='ls -l'
#alias la='ll -A'
#alias lx='ll -BX'                   # sort by extension
#alias lz='ll -rS'                   # sort by size
#alias lt='ll -rt'                   # sort by date
#alias lm='la | more'
#
## safety features
#alias cp='cp -i'
#alias mv='mv -i'
#alias rm='rm -i'
#
#
## colouring man/less (http://wiki.archlinux.org/index.php/Man_Page#Colored_man_pages)
#export LESS_TERMCAP_mb=$(printf "\e[1;37m")
#export LESS_TERMCAP_md=$(printf "\e[1;37m")
#export LESS_TERMCAP_me=$(printf "\e[0m")
#export LESS_TERMCAP_se=$(printf "\e[0m")
#export LESS_TERMCAP_so=$(printf "\e[1;47;30m")
#export LESS_TERMCAP_ue=$(printf "\e[0m")
#export LESS_TERMCAP_us=$(printf "\e[0;36m")
#function env() {
#    exec /usr/bin/env "$@" | grep -v ^LESS_TERMCAP_
#}




#PS1='[\u@\h \W]\$ '   # default value
PROMPT_COMMAND='history -a;'
PS1="\`if [ \$? = 0 ]; then echo '\[\e[1;32m\]'; else echo \[\e[31m\]; fi\`[\`date +%T\` \u@\h \`echo '\w' | sed 's#\([\._~]*[^/]\)[^/]*/#\1/#g'\`]\$ \[\e[0m\]"

#########################
#Here are the backslash-escape special characters that have meaning to bash:
#
#       \a     an ASCII bell character (07)
#       \d     the date  in  "Weekday  Month  Date"  format
#              (e.g., "Tue May 26")
#       \e     an ASCII escape character (033)
#       \h     the hostname up to the first `.'
#       \H     the hostname
#       \j     the  number of jobs currently managed by the shell
#       \l     the basename of the shell's terminal device name
#       \n     newline
#       \r     carriage return
#       \s     the  name  of  the shell, the basename of $0
#              (the portion following the final slash)
#       \t     the current time in 24-hour HH:MM:SS format
#       \T     the current time in 12-hour HH:MM:SS format
#       \@     the current time in 12-hour am/pm format
#       \u     the username of the current user
#       \v     the version of bash (e.g., 2.00)
#       \V     the release of bash,  version  +  patchlevel
#              (e.g., 2.00.0)
#       \w     the current working directory
#       \W     the  basename  of the current working direcory
#       \!     the history number of this command
#       \#     the command number of this command
#       \$     if the effective UID is 0, a #, otherwise a $
#       \nnn   the character corresponding to the octal number nnn
#       \\     a backslash
#       \[     begin a sequence of non-printing characters,
#              which could be used to embed a terminal control
#              sequence into the prompt
#       \]     end a sequence of non-printing characters
#
#Colours In Bash:
#
#      Black       0;30     Dark Gray     1;30
#      Blue        0;34     Light Blue    1;34
#      Green       0;32     Light Green   1;32
#      Cyan        0;36     Light Cyan    1;36
#      Red         0;31     Light Red     1;31
#      Purple      0;35     Light Purple  1;35
#      Brown       0;33     Yellow        1;33
#      Light Gray  0;37     White         1;37
#
#Here is an example borrowed from the Bash-Prompt-HOWTO:
#
#      PS1="\[\033[1;30m\][\[\033[1;34m\]\u\[\033[1;30m\]@\[\033[0;35m\]\h\[\033[1;30m\]] \[\033[0;37m\]\W \[\033[1;30m\]\$\[\033[0m\] "
#
#This one sets up a prompt like this: 
#      [user@host] directory $
#
#Break down:
#
#      \[\033[1;30m\] - Sets the color for the characters that follow it. Here 1;30 will set them to Dark Gray.
#      \u \h \W \$ - Look to the table above
#      \[\033[0m\] - Sets the colours back to how they were originally.
#########################

